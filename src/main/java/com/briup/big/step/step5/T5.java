package com.briup.big.step.step5;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.util.Tool;
import org.apache.hadoop.util.ToolRunner;
/**
 * 第五步:
 * 	商品共现矩阵  乘以    用户购买向量    形成临时的推荐结果。
 * 
 * 商品共现矩阵:
 *  		20001	20001:3,20002:2,20005:2,20006:2,20007:1
            20002	20001:2,20002:3,20005:2,20006:2,20007:2
            20003	20003:1,20004:1,20006:1
            20004	20003:1,20004:2,20006:1,20007:1
            20005	20001:2,20002:2,20005:2,20006:2,20007:1
            20006	20001:2,20002:2,20003:1,20004:1,20005:2,20006:3,20007:1
            20007	20001:1,20002:2,20004:1,20005:1,20006:1,20007:3
 * 
 * 用户购买向量:
 *   		20001	10001:1,10004:1,10005:1
            20002	10001:1,10003:1,10004:1
            20003	10002:1
            20004	10002:1,10006:1
            20005	10001:1,10004:1
            20006	10001:1,10002:1,10004:1
            20007	10001:1,10003:1,10006:1
    计算规则：
    	把用户向量的value值(10001:1,10004:1,10005:1)里面的每个部分(10001:1|10004:1|10005:1)
    	去乘商品共现矩阵:当前行(用户购买向量中商品共现矩阵  商品id相同的行)的每一个值(20001:3|20002:2|20005:2|20006:2|20007:1)相乘
    	结果的key:Text : 用户id:商品id	
    	     value:Text: 次数   1*3 |  1*2 | 1*2  |  1*2 | 1*1
    		
 * 结果:
 * 		 	10001,20001	2
			10001,20001	2
				10001,20001	3
			10001,20001	1
				10001,20001	2
			10001,20002	3
			10001,20002	2
			10001,20002	2
			10001,20002	2
			10001,20002	2
			10001,20003	1
			10001,20004	1
			10001,20004	1
				10001,20005	2
			10001,20005	2
			10001,20005	2
			10001,20005	1
			10001,20005	2
				10001,20006	2
			10001,20006	3
			10001,20006	2
			10001,20006	1
			10001,20006	2
			10001,20007	2
				10001,20007	1
			10001,20007	1
			10001,20007	3
			10001,20007	1
			
			10002,20001	2
			10002,20002	2
			10002,20003	1
			10002,20003	1
			10002,20003	1
			10002,20004	1
			10002,20004	2
			10002,20004	1
			10002,20005	2
			10002,20006	3
			10002,20006	1
			10002,20006	1
			10002,20007	1
			10002,20007	1
			10003,20001	2
			10003,20001	1
			10003,20002	3
			10003,20002	2
			10003,20004	1
			10003,20005	2
			10003,20005	1
			10003,20006	2
			10003,20006	1
			10003,20007	2
			10003,20007	3
			
			10004,20001	2
			10004,20001	2
				10004,20001	3
			10004,20001	2
			10004,20002	3
				10004,20002	2
			10004,20002	2
			10004,20002	2
			10004,20003	1
			10004,20004	1
				10004,20005	2
			10004,20005	2
			10004,20005	2
			10004,20005	2
			10004,20006	2
			10004,20006	3
			10004,20006	2
			10004,20006	2
			10004,20007	2
			10004,20007	1
			10004,20007	1
			10004,20007	1
			
			10005,20001	3
			10005,20002	2
			10005,20005	2
			10005,20006	2
			10005,20007	1
			10006,20001	1
			10006,20002	2
			10006,20003	1
			10006,20004	2
			10006,20004	1
			10006,20005	1
			10006,20006	1
			10006,20006	1
			10006,20007	1
			10006,20007	3
 * 
 * 
 * 
 * 
 * 
 * 
 * */
public class T5 extends Configured implements Tool {
	public static void main(String[] args) throws Exception {
		//调用run方法
		ToolRunner.run(new T5(), args);
	}

	@Override
	public int run(String[] args) throws Exception {
		Configuration conf = getConf();
		FileSystem fs = FileSystem.get(conf);

		fs.close();
		return 0;
	}
}
