package com.briup.big.step.step5;

import java.io.IOException;
import java.util.Arrays;

import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;

/**
 * 处理数据<br>
 * key:20001
 * values: 		A:10001:1,10004:1,10005:1
 * 				B:20001:3,20002:2,20005:2,20006:2,20007:1
 * 
 *结果:
	 	10001,20001	2
		10001,20001	2
		10001,20001	3
		10001,20001	1
 * */
public class T5Reduce extends Reducer<Text, Text, Text, Text>{
	
	/**
	 * 
	 * -------------------------------
		key:  20001
		value: A:10001:1,10004:1,10005:1
		value: B:20001:3,20002:2,20005:2,20006:2,20007:1
		----------------------------------
		-------------------------------
		key:  20002
		value: B:20001:2,20002:3,20005:2,20006:2,20007:2
		value: A:10001:1,10004:1,10003:1
		----------------------------------
		-------------------------------
		key:  20003
		value: A:10002:1
		value: B:20003:1,20004:1,20006:1
		----------------------------------
		-------------------------------
		key:  20004
		value: B:20003:1,20004:2,20006:1,20007:1
		value: A:10002:1,10006:1
		----------------------------------
		-------------------------------
		key:  20005
		value: A:10001:1,10004:1
		value: B:20001:2,20002:2,20005:2,20006:2,20007:1
		----------------------------------
		-------------------------------
		key:  20006
		value: B:20001:2,20002:2,20003:1,20004:1,20005:2,20006:3,20007:1
		value: A:10002:1,10001:1,10004:1
		----------------------------------
		-------------------------------
		key:  20007
		value: A:10001:1,10003:1,10006:1
		value: B:20001:1,20002:2,20004:1,20005:1,20006:1,20007:3
		----------------------------------
	 * 
	 * 

	 * 
	 * */
	@Override
	protected void reduce(Text key, Iterable<Text> values, Reducer<Text, Text, Text, Text>.Context context)throws IOException, InterruptedException {
		//提取A部分数据
		String a = "";
		//提取B部分数据
		String b = "";
		
		for(Text t: values){
			String ts = t.toString().trim();
			if(ts.indexOf("A:")!=-1){
				a = ts.replace("A:", "");
			}else if(ts.indexOf("B:")!=-1){
				b = ts.replace("B:", "");
			}
		}//for end
		//a : //10001:1,10003:1,10006:1
		//b : //20001:1,20002:2,20004:1,20005:1,20006:1,20007:3
		
		String[] arra = a.split(",");//a的数组
		String[] arrb = b.split(",");//b的数组
		
		//需要的结果	10001,20001	2
		for(String v1 : arra){//v1 === 10001:1
			String[] v1s = v1.split(":");
			for(String v2 : arrb){//v2 === 20001:1
				String[] v2s = v2.split(":");
				System.out.println("------------"+Arrays.toString(v2s));
				String endKey = v1s[0].trim()+","+v2s[0].trim();
				int endValue = Integer.parseInt(v1s[1])*Integer.parseInt(v2s[1]);
				
				context.write(new Text(endKey), new Text(""+endValue));
			}
		}
		
		//数据相乘: 1001:1 * 2001:1
		//数据相乘: 1001:1 * 2002:1
		//数据相乘: 1001:1 * 2004:1
		//数据相乘: 1001:1 * 2005:1
		//数据相乘: 1001:1 * 2006:1
		//数据相乘: 1001:1 * 2007:3
		
		//数据相乘: 1001:3 * 2001:1
		//数据相乘: 1001:3 * 2002:1
		//数据相乘: 1001:3 * 2004:1
		//数据相乘: 1001:3 * 2005:1
		//数据相乘: 1001:3 * 2006:1
		//数据相乘: 1001:3 * 2007:3
		
		//数据相乘: 1001:6 * 2001:1
		//数据相乘: 1001:6 * 2002:1
		//数据相乘: 1001:6 * 2004:1
		//数据相乘: 1001:6 * 2005:1
		//数据相乘: 1001:6 * 2006:1
		//数据相乘: 1001:6 * 2007:3
		
		
		
		
		
		
		
		
		
		
	}
}
