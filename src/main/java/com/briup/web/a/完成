该学生完成
会员信息管理模块:
   1,用户注册
   2,用户登入
   3,修改用户信息
   4,忘记密码
   5,登出
 
 
 
 1,登入
	index.html-->登入----->login.html
	register.html-->登入-->login.html
	登入:
	servlet:接收到页面form表单的数据
	使用用户名查询该用户名在数据库的中的密码
	查询到的密码 和 用户输入的密码比对

	比对成功:(登入成功)
		跳转index.html(有变化(显示了当前登入的用户名,显示了退出按钮)),
		登入成功以后要向环境(session)中放数据:
		用户信息+购物车

		扩展:1,没有登入的用户对购物车的使用？
		     2,购物车的持久化
		
	
	比对失败:(登录失败):
		跳转login.html,提示信息(容器)
		jsp:页面 ${key}获取显示
		
2,注册
	index.html-->注册-->register.html
	2.1:对注册数据的验证-->提交表单以后，在servlet中进行验证
	 		1,接受所有数据
	 		2,验证:如果不满足条件: 给反馈信息 跳转register.jsp
	 			反馈信息 : request.setAttribute("msg","xx失败");
	 			跳转jsp : 服务器内部跳转
	 		3,register.jsp
	 			${msg}
	 				 		
		验证通过 注册(表单数据保存到数据库),跳转index.html
		验证不通过 跳转register.html,给页面提示信息(使用容器传值)
		
	2.2:用户名信息要求唯一
	
	
	
	
3,修改用户信息
	index.html--->个人信息--->userInfo.html
	
	逻辑:
		1,index.html中的个人信息按钮:需要用户登入成功以后才能显示	
		2,要在userinfo.html把原始的用户信息显示(用户的id需要在表单中出现)

	点击修改按钮：
		提交表单,
		servlet把数据更新:通过id更新其他的列(数据)
		跳转成功以后跳转到userinfo.html(需要显示更新以后的用户信息)
		把登入放到环境中的user信息更新
		
4,忘记密码
	login.html--->忘记密码--->forgetPassword.html
	
	提交表单:
		先判断两次密码是否一致:
			不一致：反馈页面forgetPassword.html并且给提示
		name+phone判断和数据库的一致
		where name = #{name} and phone = #{phone}
		可以修改密码:通过name和phone更新密码
		更新完成密码以后 跳回到登入页面
5,登出
	登入成功以后的首页-->退出-->登入前的首页
	
	把user+shopCart从容器中移除
	session.removeAttribute("user")
  

  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  